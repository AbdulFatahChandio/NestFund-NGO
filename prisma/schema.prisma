// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  name      String
  roleId    Int

  role       Role        @relation(fields: [roleId], references: [id])
  ngoProfile ngoProfile?
}

model ngoProfile {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  type              NgoType @default(trust)
  purpose           Purpose @default(fund)
  registrationID    String  @unique
  registeredCountry String
  state             String
  city              String
  noOfStaff         Int
  noOfBeneficiaries Int
  ngoStatus         Status? @default(pending)
  profileCreated    User    @relation(fields: [creatorId], references: [id])
  creatorId         Int     @unique

  campaigns Campaign[]
}

model Permission {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  module    String
  key       String   @unique

  RolePermission RolePermission[]
}

model Role {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique

  User User[]

  RolePermission RolePermission[]
}

model RolePermission {
  roleId Int
  role   Role @relation(fields: [roleId], references: [id])

  permissionId Int
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
}

model Campaign {
  id              Int            @id @default(autoincrement())
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  title           String
  description     String
  goalAmount      Decimal        @db.Decimal(15, 2)
  collectedAmount Decimal        @default(0) @db.Decimal(15, 2)
  startDate       DateTime
  endDate         DateTime?
  status          CampaignStatus @default(pending)
  ngoId           Int
  ngoProfile     ngoProfile     @relation(fields: [ngoId], references: [id])
}

enum NgoType {
  nonProfit
  welfare
  charitable
  trust
  society
  company
}

enum Purpose {
  education
  fund
  health
  oldHouse
  orphanHouse
  womenEmpowerment
  disaster
  relief
}

enum Status {
  pending
  approved
  rejected
}

enum CampaignStatus {
  pending
  active
  completed
  cancelled
}

// enum Role{
//   donor
// }
